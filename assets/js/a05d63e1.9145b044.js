"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[260],{5173:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=t(2322),i=t(5392);const s={sidebar_position:6,title:"Customization"},a=void 0,c={id:"async-modal-react/customize",title:"Customization",description:"This library focuses on providing a simple and easy to use API for creating.",source:"@site/docs/async-modal-react/customize.mdx",sourceDirName:"async-modal-react",slug:"/async-modal-react/customize",permalink:"/livemehere-dev-packs/docs/async-modal-react/customize",draft:!1,unlisted:!1,editUrl:"https://github.com/livemehere/livemehere-dev-packs/docs/async-modal-react/customize.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Customization"},sidebar:"tutorialSidebar",previous:{title:"hooks",permalink:"/livemehere-dev-packs/docs/async-modal-react/hooks"}},r={},l=[{value:"Customizing top container",id:"customizing-top-container",level:2},{value:"Customizing modal position",id:"customizing-modal-position",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"This library focuses on providing a simple and easy to use API for creating.\nso it has common styles for default. (background, centering)."}),"\n",(0,o.jsx)(n.p,{children:"And this lib can open multiple modals at the same time but those modals layout is flexbox."}),"\n",(0,o.jsx)(n.h2,{id:"customizing-top-container",children:"Customizing top container"}),"\n",(0,o.jsxs)(n.p,{children:["select top container by ",(0,o.jsx)(n.code,{children:'id="modal-root"'}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:"title='default'",children:'<div\n  id="modal-root"\n  style={{\n    position: "fixed",\n    top: 0,\n    left: 0,\n    width: "100%",\n    height: "100%",\n    background: "rgba(0, 0, 0, 0.5)",\n    display: "flex",\n    justifyContent: "center",\n    alignItems: "center",\n  }}\n>\n  {children}\n</div>\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",metastring:"title='global.css'",children:"#modal-root {\n  background: blue !important;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"customizing-modal-position",children:"Customizing modal position"}),"\n",(0,o.jsxs)(n.p,{children:["Normally, modal is centered by ",(0,o.jsx)(n.code,{children:"display: flex; justify-content: center; align-items: center;"}),".\nIf there are more than 2 modal opened, those modals are displayed in a row.\nso maybe you need to give ",(0,o.jsx)(n.code,{children:"position: absolute;"})," to each modal."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:"title='example-modal'",children:'// ...\nreturn (\n  <div\n    style={{\n      background: "white",\n      position: "absolute",\n    }}\n  >\n    <h2>ExampleModal</h2>\n    <button onClick={() => resolve(`resolve! ${name}`)}>RESOLVE</button>\n    <button onClick={() => reject("reject T-T")}>REJECT</button>\n    <button onClick={close}>Close</button>\n    <button onClick={openModal}>OPEN</button>\n  </div>\n);\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5392:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var o=t(2784);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);